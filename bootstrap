# This script should be sourced, not executed
# vim: filetype=bash

# Update packages and install some essentials
eval "$(. /etc/os-release && typeset -p ID)"
if [[ $ID == ol ]]; then
  sudo dnf config-manager --set-enabled ol9_developer_EPEL
  sudo dnf upgrade -y
  sudo dnf install -y $(egrep -v "[\s]*([#;].*|^$)" ~/.dotfiles/packages)
elif [[ $ID == debian ]]; then
  sudo apt-get update && sudo apt-get upgrade -y
  sudo apt-get install -y $(egrep -v "[\s]*([#;].*|^$)" ~/.dotfiles/packages)
fi

# Stow binaries
if [[ $UID -ne 0 ]] && [[ $EUID -ne 0 ]]; then
  sudo ~/.dotfiles/bin/scripts/stow-bin.sh
else
  ~/.dotfiles/bin/scripts/stow-bin.sh --nosudo
fi

# Stow dotfiles
~/.dotfiles/bin/scripts/stow-dotfiles.sh config

# Pull dotfiles origin/master
git -C ~/.dotfiles remote update

# Setup/update antidote
if [[ $ZSH_VERSION ]]; then
  if [[ ! -d ~/.cache/antidote ]]; then
    git clone --depth=1 https://github.com/mattmc3/antidote.git \
      ~/.cache/antidote
  fi
  source ~/.cache/antidote/antidote.zsh
  antidote load ~/.dotfiles/config/.includes/zsh_plugins.txt
  antidote update
fi

# Setup cache directories
if [[ $BASH_VERSION ]]; then
  if [[ ! -d ~/.cache/bash ]]; then
    mkdir -p ~/.cache/bash
    touch ~/.cache/bash/bash_history
  fi
elif [[ $ZSH_VERSION ]]; then
  if [[ ! -d ~/.cache/zsh ]]; then
    mkdir -p ~/.cache/zsh
    touch ~/.cache/zsh/zsh_history
  fi
fi

# Check for new kernel
if ! grep -qi microsoft /proc/version; then
  ~/.dotfiles/bin/scripts/kernel-update-check.sh
fi

# Initialise shell
if [[ $BASH_VERSION ]]; then
  bind -f ~/.inputrc
  source ~/.bash_profile
elif [[ $ZSH_VERSION ]]; then
  exec zsh
fi
