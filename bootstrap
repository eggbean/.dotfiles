# This script should be sourced, not executed
# vim: filetype=bash

# Update packages and install some essentials
eval "$(. /etc/os-release && typeset -p ID)"
if [[ $ID == ol ]]; then
  sudo dnf config-manager --set-enabled ol9_developer_EPEL
  sudo dnf upgrade -y || \
    { echo "Failed: packages update"; return 1; }
  if ! cmp --silent ~/.dotfiles/packages $XDG_STATE_HOME/bootstrap_packages; then
    source ~/.dotfiles/packages && sudo dnf install -y -- "${packages[@]}" || \
      { echo "Failed: package installation"; return 1; }
    command cp ~/.dotfiles/packages $XDG_STATE_HOME/bootstrap_packages
  fi
elif [[ $ID == debian ]]; then
  sudo apt-get update && sudo apt-get upgrade -y || \
    { echo "Failed: packages update"; return 1; }
  if ! cmp --silent ~/.dotfiles/packages $XDG_STATE_HOME/bootstrap_packages; then
    source ~/.dotfiles/packages && sudo apt-get install -y -- "${packages[@]}" || \
      { echo "Failed: package installation"; return 1; }
    command cp ~/.dotfiles/packages $XDG_STATE_HOME/bootstrap_packages
  fi
fi
unset packages

# Setup/update antidote
if [[ $ZSH_VERSION ]]; then
  if [[ ! -d ~/.cache/antidote ]]; then
    git clone --depth=1 https://github.com/mattmc3/antidote.git ~/.cache/antidote
  fi
  source ~/.cache/antidote/antidote.zsh
  antidote load ~/.dotfiles/config/.includes/zsh_plugins.txt
  antidote update | grep -Ev "(^antidote: checking for updates|^$)"
fi

# Pull dotfiles origin/master
git -C ~/.dotfiles remote update
[[ $(git -C ~/.dotfiles rev-parse HEAD) == \
  $(git -C ~/.dotfiles ls-remote $(git -C ~/.dotfiles rev-parse --abbrev-ref @{u} | \
  sed 's/\// /g') | cut -f1) ]] && echo Local repository is up to date || \
  echo Local repository has diverged from remote. Updating now.. && {
  git -C ~/.dotfiles diff-index --quiet HEAD || stash=true
  [[ $stash ]] && git -C ~/.dotfiles stash push --quiet && \
    git -C ~/.dotfiles pull --no-ff && \
    [[ $stash ]] && git -C ~/.dotfiles stash pop --quiet
  }

# Stow binaries
if [[ $UID -ne 0 ]] && [[ $EUID -ne 0 ]]; then
  sudo ~/.dotfiles/bin/scripts/stow-bin.sh && \
    echo "Binaries stowed" || \
    { echo "Failed: stow-bin.sh"; return 1; }
else
  ~/.dotfiles/bin/scripts/stow-bin.sh --nosudo && \
    echo "Binaries stowed" || \
    { echo "Failed: stow-bin.sh"; return 1; }
fi

# Stow dotfiles
~/.dotfiles/bin/scripts/stow-dotfiles.sh && \
  echo "Dotfiles stowed" || \
  { echo "Failed: stow-dotfiles.sh"; return 1; }

# Check for new kernel
if ! grep -qi microsoft /proc/version; then
  ~/.dotfiles/bin/scripts/kernel-update-check.sh
fi

# Initialise shell
exec $SHELL
