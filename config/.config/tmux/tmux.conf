## TMUX CONFIGURATION ##########################################################

# Start a non-login shell
set -g default-command "${SHELL}"

# Keep ssh-agent working on reconnection by using symlink (requires ~/.ssh/rc)
set -g update-environment "DBUS_SESSION_BUS_ADDRESS DESKTOP_SESSION DISPLAY \
	GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO GPG_AGENT_INFO \
	ORIGCOLORTERM ORIGTERM SESSION_MANAGER SSH_AGENT_PID SSH_CONNECTION \
	WINDOWID XAUTHORITY XDG_SESSION_COOKIE XDG_SESSION_PATH" # removes SSH_AUTH_SOCK
set-environment -g SSH_AUTH_SOCK "$HOME/.ssh/ssh_auth_sock"

# Find and set tmux version
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
	sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# Useful when using "grouped sessions" and multi-monitor setup
if-shell -b '[ "$(echo "$TMUX_VERSION <= 3.0a" | bc)" = 1 ]' \
	"set -g aggressive-resize on"

# Resize window > 3.0a
if-shell -b '[ "$(echo "$TMUX_VERSION > 3.0a" | bc)" = 1 ]' \
	"set -g window-size latest (!)"

# Upgrade $TERM for 256 colours
if-shell -F "#{==:$TERM,xterm-256color}" " \
	set -s default-terminal 'xterm-256color'; \
	set -s terminal-overrides ',xterm*:Tc'"

# Upgrade $TERM for 24-bit truecolour
if-shell -F "#{==:$TERM,xterm-24bit}" " \
	set -s default-terminal 'xterm-24bit'; \
	set -s terminal-overrides ',xterm-24bit:Tc'"

# Pass xterm-style keys to make many key combinations work as expected
set -g xterm-keys on

# Focus events enabled for terminals that support them
set -s focus-events on

# Status line enabled (override default off setting in google cloud shell)
set -g status on
set -g status-position bottom

# Copy-mode keys
set -g mode-keys emacs

# Mouse on
set -g mouse on

# Increase scrollback buffer size
set -g history-limit 10000

# Status line messages are displayed for 2.5 seconds
set -g display-time 2500

# Display panes is displayed for 2.5 seconds
set -g display-panes-time 2500

# Set terminal title (remove session and window numbers prefix)
set -g set-titles on
set -g set-titles-string "#W - \"#T\""

# Renaming windows
set -g allow-rename on
set -g automatic-rename on

# Automatically renumber windows
set -g renumber-windows on

# Automatically renumber sessions
set-hook -g session-created "run-shell $XDG_CONFIG_HOME/tmux/renumber-sessions.sh"
set-hook -g session-closed	"run-shell $XDG_CONFIG_HOME/tmux/renumber-sessions.sh"

# Number windows and panes starting with 1 rather than 0
set -g base-index 1
set -g pane-base-index 1

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Alerts
set -g monitor-bell on
set -g bell-action any
set -g visual-bell off
set -g monitor-activity off
set -g activity-action other
set -g visual-activity on
set -g monitor-silence 0
set -g silence-action other
set -g visual-silence on

## KEY BINDINGS ----------------------------------------------------------------

# Change prefix key from C-b to C-\ (backslash)
unbind C-b
set -g prefix "C-\\"

# Prefix twice for last window
bind -N "Move to the previously active window" "C-\\" last-window

# Clear window history
bind -N "Clear history" C-l send-keys -R \; clear-history

# New window
bind -N "Create a new window at the same location" -n C-M-t new-window -a -c "#{pane_current_path}"

# Window navigation
bind -n C-PPage prev
bind -n C-NPage next
bind -n C-S-PPage swap-window -d -t :-1
bind -n C-S-NPage swap-window -d -t :+1

# 0 selects window 10, not 0
bind 0 select-window -t :=10

# Additional window number bindings
bind M-1 select-window -t :=11
bind M-2 select-window -t :=12
bind M-3 select-window -t :=13
bind M-4 select-window -t :=14
bind M-5 select-window -t :=15
bind M-6 select-window -t :=16
bind M-7 select-window -t :=17
bind M-8 select-window -t :=18
bind M-9 select-window -t :=19
bind M-0 select-window -t :=20

# Resume automatic window naming after manual renaming
bind -N "Resume automatic window renaming" "M-<" set -u automatic-rename \; \
	display-message "automatic window renaming resumed"

# Do not start with current name when renaming window
bind -N "Rename current window" , command-prompt 'rename-window -- "%%"'

# Pane navigation
bind -n C-M-Up	  select-pane -U
bind -n C-M-Down  select-pane -D
bind -n C-M-Left  select-pane -L
bind -n C-M-Right select-pane -R

# Pane splitting
bind "|"  split-window -h -c "#{pane_current_path}"
bind "\\" split-window -fh -c "#{pane_current_path}"
bind "-"  split-window -v -c "#{pane_current_path}"
bind "_"  split-window -fv -c "#{pane_current_path}"

# Join pane
bind -N "Join pane" @ choose-window 'join-pane -v -s "%%"'

# Synchronise panes
bind -N "Synchronise panes" * set synchronize-panes \; \
	display-message "synchronised panes #{?pane_synchronized,on,off}"

# Toggle enable/disable input to pane
bind -N "Toggle pane input" M-* if-shell -F "#{pane_input_off}" 'select-pane -e' 'select-pane -d' \; \
	display-message "input to pane #{?pane_input_off,disabled,enabled}"

# M-PgUp/PgDn for half page up/down in copy-mode
bind -T copy-mode M-NPage send-keys -X halfpage-down
bind -T copy-mode M-PPage send-keys -X halfpage-up

# Copy in copy-mode, without exiting
bind -T copy-mode M-y send-keys -X copy-selection

# Copy-mode arrow key C-Left/Right navigation
bind -T copy-mode C-Left  send-keys -X previous-word
bind -T copy-mode C-Right send-keys -X next-word-end

# R reloads tmux configuration
bind -N "Reload configuration" R source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; \
	display-message "source-file done"

# Create new session
bind -N "Create a new session" S command-prompt 'new-session -s "%%"'

# Kill session
bind -N "Kill current session" X confirm-before -p "kill-session? (y/n)" kill-session

## COLOURS ---------------------------------------------------------------------

set -g @zoomed 'colour68'		# light grey/blue
set -g @active 'colour27'		# blue
set -g @inactive 'colour18'		# dark blue
set -g @message 'colour197'		# red
set -g @bell 'colour210'		# orange
set -g @white 'colour225'		# white
set -g @black 'colour16'		# black
set -g @paneactive 'green'		# green
set -g @paneinactive 'magenta'	# magenta

## FORMATS AND STYLING ---------------------------------------------------------

# Border styling
set -g pane-active-border-style "fg=#{@paneactive},bg=default"
set -g pane-border-style "fg=#{@paneinactive},bg=default"

# Message styling
set -Fg message-style "fg=#{@message}"

# Status line format
set -g window-status-format "#{?window_zoomed_flag,#[bg=#{@zoomed}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
set -g window-status-current-format "#{?window_zoomed_flag,#[bg=#{@zoomed}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
set -g status-right "#{prefix_highlight} #(hostname -f) "

# Status line styling
set -Fg status-style "fg=#{@black},bg=#{@active}"
set -Fg status-right-style "fg=#{@white}"
set -Fg window-status-current-style "fg=#{@white},bg=#{@active}"
set -Fg window-status-bell-style "fg=#{@black}#,bg=#{@bell}"

## NESTED TMUX -----------------------------------------------------------------

bind -n M-S-F2 {
	set -Fga status-style "bg=#{@inactive}"
	set -Fga status-right-style "fg=#{@black}"
	set -g window-status-format "#{?window_zoomed_flag,#[bg=#{@inactive}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
}
bind -n M-S-F3 {
	set -Fga status-style "bg=#{@active}"
	set -Fga status-right-style "fg=#{@white}"
	set -g window-status-format "#{?window_zoomed_flag,#[bg=#{@zoomed}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
}
bind -n C-M-PPage {
	send-keys M-S-F3
	set -Fga status-style "bg=#{@inactive}"
	set -Fga status-right-style "fg=#{@black}"
	set -g window-status-format "#{?window_zoomed_flag,#[bg=#{@inactive}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
	unbind -n C-PPage
	unbind -n C-NPage
	unbind -n C-S-PPage
	unbind -n C-S-NPage
	unbind -n C-M-t
	unbind -n C-M-Up
	unbind -n C-M-Down
	unbind -n C-M-Left
	unbind -n C-M-Right
	set -g prefix M-S-F1
}
bind -n C-M-NPage {
	send-keys M-S-F2
	set -Fga status-style "bg=#{@active}"
	set -Fga status-right-style "fg=#{@white}"
	set -g window-status-format "#{?window_zoomed_flag,#[bg=#{@zoomed}],} #I:#W#{?pane_synchronized,*,}#{?pane_marked,^,} "
	bind -n C-PPage	prev
	bind -n C-NPage next
	bind -n C-S-PPage swap-window -d -t :-1
	bind -n C-S-NPage swap-window -d -t :+1
	bind -n C-M-t new-window -a -c "#{pane_current_path}"
	bind -n C-M-Up	  select-pane -U
	bind -n C-M-Down  select-pane -D
	bind -n C-M-Left  select-pane -L
	bind -n C-M-Right select-pane -R
	set -g prefix "C-\\"
}

## PLUGINS ---------------------------------------------------------------------

if-shell '[ -x /bin/xdg-open ] && [ ! -d "$XDG_CONFIG_HOME/tmux/plugins/tmux-open" ]' \
	'run-shell "git clone https://github.com/tmux-plugins/tmux-open "$XDG_CONFIG_HOME/tmux/plugins/tmux-open""'

if-shell '[ ! -d "$XDG_CONFIG_HOME/tmux/plugins/tpm" ]' \
	'run-shell "git clone https://github.com/tmux-plugins/tpm "$XDG_CONFIG_HOME/tmux/plugins/tpm""'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sidebar'
	set -g @sidebar-tree-command 'tree -Ca -I '.git''
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
	set -g @scroll-without-changing-pane 'on'
	set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
	set -g @yank_action 'copy-pipe'
	set -g @yank_with_mouse 'on'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
	set -g @fzf-url-bind 'u'
set -g @plugin 'tmux-plugins/tmux-resurrect'
	set -g @resurrect-processes 'ssh mosh-client ne bat'
	set -g @resurrect-capture-pane-contents 'on'
	set -g @resurrect-dir '~/.cache/tmux/resurrect'

# Initialise plugins (keep these lines at the very bottom of tmux.conf)
if-shell -b '[ -x /bin/xdg-open ]' \
	'run-shell -b "$XDG_CONFIG_HOME/tmux/plugins/tmux-open/open.tmux"'
run-shell -b "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
